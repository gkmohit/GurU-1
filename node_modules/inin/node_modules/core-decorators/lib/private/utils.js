'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
var _slice = Array.prototype.slice;
exports.isDescriptor = isDescriptor;
exports.decorate = decorate;
exports.metaFor = metaFor;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }

function isDescriptor(desc) {
  if (!desc || !desc.hasOwnProperty) {
    return false;
  }

  var keys = ['value', 'get', 'set'];

  for (var i = 0, l = keys.length; i < l; i++) {
    if (desc.hasOwnProperty(keys[i])) {
      return true;
    }
  }

  return false;
}

function decorate(handleDescriptor, entryArgs) {
  if (isDescriptor(entryArgs[entryArgs.length - 1])) {
    return handleDescriptor.apply(undefined, _toConsumableArray(entryArgs).concat([[]]));
  } else {
    return function () {
      return handleDescriptor.apply(undefined, _slice.call(arguments).concat([entryArgs]));
    };
  }
}

var Meta = function Meta() {
  _classCallCheck(this, Meta);

  this.debounceTimeoutIds = {};
};

var defineProperty = Object.defineProperty;

function metaFor(obj) {
  if (obj.hasOwnProperty('__core_decorators__') === false) {
    defineProperty(obj, '__core_decorators__', {
      // Defaults: NOT enumerable, configurable, or writable
      value: new Meta()
    });
  }

  return obj.__core_decorators__;
}